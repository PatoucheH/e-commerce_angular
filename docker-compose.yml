version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: e-commerce_angular-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  api:
    build:
      context: ./backend-api
      dockerfile: Dockerfile
    container_name: e-commerce_angular-api
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=http://localhost:5147
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - STRIP_SECRET_KEY=${STRIP_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5147:5000"  

  web:
    build:
      context: ./angular-app
      dockerfile: Dockerfile
    container_name: e-commerce_angular-web
    depends_on:
      - api
    ports:
      - "4200:80"   

volumes:
  db_data: